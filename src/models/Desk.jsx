/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: La Jarre à Son (https://sketchfab.com/la_jarre_a_son)
License: CC-BY-NC-SA-4.0 (http://creativecommons.org/licenses/by-nc-sa/4.0/)
Source: https://sketchfab.com/3d-models/la-jarre-a-son-home-studio-desk-2023-538fdc1dc1c1478da6a2761ec3c6dcab
Title: La Jarre à Son - Home Studio Desk 2023
*/

import React, { useRef, useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame, useThree } from "@react-three/fiber";
import { a } from "@react-spring/three";
import deskScene from "../assets/la_jarre_a_son_-_home_studio_desk_2023.glb"

const Desk = ({ isRotating, setIsRotating, setCurrentStage, ...props}) => {
  const { nodes, materials } = useGLTF(deskScene);
  const deskRef = useRef();
  const { gl, viewport } = useThree();
  const lastX = useRef(0);
  const rotationSpeed = useRef(0);
  const dampingFactor = 0.95;

  const handlePointerDown = (e) => {
    e.stopPropagation();
    e.preventDefault();
    setIsRotating(true);

    const clientX = e.touches ? e.touches[0].clientX : e.clientX;
    
    lastX.current = clientX;
  };
  const handlePointerUp = (e) => {
    e.stopPropagation();
    e.preventDefault();
    setIsRotating(false);
  };

  const handlePointerMove = (e) => {
    e.stopPropagation();
    e.preventDefault();

    if (isRotating) {
      // If rotation is enabled, calculate the change in clientX position
      const clientX = e.touches ? e.touches[0].clientX : e.clientX;


      // calculate the change in the horizontal position of the mouse cursor or touch input,
      // relative to the viewport's width
      const delta = (clientX - lastX.current) / viewport.width;

      // Update the desk's rotation based on the mouse/touch movement
      deskRef.current.rotation.y += delta * 0.01 * Math.PI;

      // Update the reference for the last clientX position
      lastX.current = clientX;

      // Update the rotation speed
      rotationSpeed.current = delta * 0.01 * Math.PI;
    }
  };

   // Handle keydown events
   const handleKeyDown = (event) => {
    if (event.key === "ArrowLeft") {
      if (!isRotating) setIsRotating(true);

      deskRef.current.rotation.y += 0.005 * Math.PI;
      rotationSpeed.current = 0.007;
    } else if (event.key === "ArrowRight") {
      if (!isRotating) setIsRotating(true);

      deskRef.current.rotation.y -= 0.005 * Math.PI;
      rotationSpeed.current = -0.007;
    }
  };

  // Handle keyup events
  const handleKeyUp = (event) => {
    if (event.key === "ArrowLeft" || event.key === "ArrowRight") {
      setIsRotating(false);
    }
  };

  // Touch events for mobile devices
  const handleTouchStart = (e) => {
    e.stopPropagation();
    e.preventDefault();
    setIsRotating(true);
  
    const clientX = e.touches ? e.touches[0].clientX : e.clientX;
    lastX.current = clientX;
  }
  
  const handleTouchEnd = (e) => {
    e.stopPropagation();
    e.preventDefault();
    setIsRotating(false);
  }
  
  const handleTouchMove = (e) => {
    e.stopPropagation();
    e.preventDefault();
  
    if (isRotating) {
      const clientX = e.touches ? e.touches[0].clientX : e.clientX;
      const delta = (clientX - lastX.current) / viewport.width;
  
      deskRef.current.rotation.y += delta * 0.01 * Math.PI;
      lastX.current = clientX;
      rotationSpeed.current = delta * 0.01 * Math.PI;
    }
  }

  useEffect(() => {
    const canvas = gl.domElement;
    canvas.addEventListener("pointerdown", handlePointerDown);
    canvas.addEventListener("pointerup", handlePointerUp);
    canvas.addEventListener("pointermove", handlePointerMove);
    window.addEventListener("keydown", handleKeyDown);
    window.addEventListener("keyup", handleKeyUp);
    canvas.addEventListener("touchstart", handleTouchStart);
    canvas.addEventListener("touchend", handleTouchEnd);
    canvas.addEventListener("touchmove", handleTouchMove);

    return () => {
      canvas.removeEventListener("pointerdown", handlePointerDown);
      canvas.removeEventListener("pointerup", handlePointerUp);
      canvas.removeEventListener("pointermove", handlePointerMove);
      window.removeEventListener("keydown", handleKeyDown);
      window.removeEventListener("keyup", handleKeyUp);
      canvas.removeEventListener("touchstart", handleTouchStart);
      canvas.removeEventListener("touchend", handleTouchEnd);
      canvas.removeEventListener("touchmove", handleTouchMove);
    }
  }, [gl, handlePointerDown, handlePointerUp,  handlePointerMove, handleKeyDown, handleKeyUp, handleTouchStart, handleTouchMove, handleTouchEnd]);

  useFrame(() => {
    // If not rotating, apply damping to slow down the rotation (smoothly)
    if (!isRotating) {
      // Apply damping factor
      rotationSpeed.current *= dampingFactor;

      // Stop rotation when speed is very small
      if (Math.abs(rotationSpeed.current) < 0.001) {
        rotationSpeed.current = 0;
      }

      deskRef.current.rotation.y += rotationSpeed.current;
    } else {
      // When rotating, determine the current stage based on desk's orientation
      const rotation = deskRef.current.rotation.y;

      /**
       * Normalize the rotation value to ensure it stays within the range [0, 2 * Math.PI].
       * The goal is to ensure that the rotation value remains within a specific range to
       * prevent potential issues with very large or negative rotation values.
       *  Here's a step-by-step explanation of what this code does:
       *  1. rotation % (2 * Math.PI) calculates the remainder of the rotation value when divided
       *     by 2 * Math.PI. This essentially wraps the rotation value around once it reaches a
       *     full circle (360 degrees) so that it stays within the range of 0 to 2 * Math.PI.
       *  2. (rotation % (2 * Math.PI)) + 2 * Math.PI adds 2 * Math.PI to the result from step 1.
       *     This is done to ensure that the value remains positive and within the range of
       *     0 to 2 * Math.PI even if it was negative after the modulo operation in step 1.
       *  3. Finally, ((rotation % (2 * Math.PI)) + 2 * Math.PI) % (2 * Math.PI) applies another
       *     modulo operation to the value obtained in step 2. This step guarantees that the value
       *     always stays within the range of 0 to 2 * Math.PI, which is equivalent to a full
       *     circle in radians.
       */
      const normalizedRotation =
        ((rotation % (2 * Math.PI)) + 2 * Math.PI) % (2 * Math.PI);

      // Set the current stage based on the desk's orientation
      switch (true) {
        case normalizedRotation >= 5.45 && normalizedRotation <= 5.85:
          setCurrentStage(4);
          break;
        case normalizedRotation >= 0.85 && normalizedRotation <= 1.3:
          setCurrentStage(3);
          break;
        case normalizedRotation >= 2.4 && normalizedRotation <= 2.6:
          setCurrentStage(2);
          break;
        case normalizedRotation >= 4.25 && normalizedRotation <= 4.75:
          setCurrentStage(1);
          break;
        default:
          setCurrentStage(null);
      }
    }
  });

  return (
    <a.group {...props} ref={deskRef}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_4.geometry}
            material={materials["Painted.Gray"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_5.geometry}
            material={materials["Metal.Aluminum"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_6.geometry}
            material={materials["Plastic.Black"]}
          />
          <group position={[-0.93, 0.442, 0.42]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_8.geometry}
              material={materials["Metal.Brushed"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_9.geometry}
              material={materials.Mirror}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_10.geometry}
              material={materials["Amp.Eltax"]}
            />
          </group>
          <group position={[0.62, 0.838, 0.03]}>
            <group rotation={[0, -0.4, 0]}>
              <group position={[0, 0.061, 0.003]} rotation={[0.077, 0, 0]}>
                <group position={[0, 0.331, 0]} rotation={[0.498, 0, 0]}>
                  <group position={[0, 0.311, 0]} rotation={[2.831, 0, 0]}>
                    <group
                      position={[0, 0.097, -0.003]}
                      rotation={[1.571, 0, 0]}
                    >
                      <group rotation={[-Math.PI / 2, 0, 0]}>
                        <mesh
                          castShadow
                          receiveShadow
                          geometry={nodes.Object_19.geometry}
                          material={materials["Plastic.Black"]}
                        />
                        <mesh
                          castShadow
                          receiveShadow
                          geometry={nodes.Object_20.geometry}
                          material={materials["Light.White"]}
                        />
                      </group>
                    </group>
                    <mesh
                      castShadow
                      receiveShadow
                      geometry={nodes.Object_22.geometry}
                      material={materials["Plastic.Black"]}
                    />
                  </group>
                  <group
                    position={[0, 0.018, -0.003]}
                    rotation={[Math.PI / 2, 0, 0]}
                  >
                    <group rotation={[-Math.PI / 2, 0, 0]}>
                      <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Object_25.geometry}
                        material={materials["Plastic.Black"]}
                      />
                      <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Object_26.geometry}
                        material={materials["Light.White"]}
                      />
                    </group>
                  </group>
                  <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_28.geometry}
                    material={materials["Plastic.Black"]}
                  />
                </group>
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_30.geometry}
                  material={materials["Plastic.Black"]}
                />
              </group>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_32.geometry}
                material={materials["Plastic.Black"]}
              />
            </group>
          </group>
          <group position={[0.5, 0.839, 0.04]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_42.geometry}
              material={materials["Plastic.Black"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_43.geometry}
              material={materials["Metal.Brushed"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_44.geometry}
              material={materials["Metal.Chrome"]}
            />
            <group position={[0, 0.2, 0]}>
              <group rotation={[0.785, 0.568, 1.721]}>
                <group position={[0, 0.3, 0]} rotation={[-0.54, 0.231, -0.109]}>
                  <group
                    position={[0, 0.25, 0]}
                    rotation={[0.019, 0.807, -1.601]}
                  >
                    <mesh
                      castShadow
                      receiveShadow
                      geometry={nodes.Object_50.geometry}
                      material={materials["Plastic.Black"]}
                    />
                    <mesh
                      castShadow
                      receiveShadow
                      geometry={nodes.Object_51.geometry}
                      material={materials["Metal.Brushed"]}
                    />
                    <mesh
                      castShadow
                      receiveShadow
                      geometry={nodes.Object_52.geometry}
                      material={materials["Metal.Chrome"]}
                    />
                    <group position={[0, 0.05, 0]}>
                      <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Object_54.geometry}
                        material={materials["Plastic.Black"]}
                      />
                      <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Object_55.geometry}
                        material={materials["Screen.Display.LumixG7"]}
                      />
                    </group>
                  </group>
                  <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_57.geometry}
                    material={materials["Plastic.Black"]}
                  />
                  <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_58.geometry}
                    material={materials["Metal.Brushed"]}
                  />
                  <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_59.geometry}
                    material={materials["Metal.Chrome"]}
                  />
                </group>
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_61.geometry}
                  material={materials["Plastic.Black"]}
                />
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_62.geometry}
                  material={materials["Metal.Brushed"]}
                />
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_63.geometry}
                  material={materials["Metal.Chrome"]}
                />
              </group>
            </group>
          </group>
          <group position={[0.71, 0.21, 0.36]} rotation={[0, 0, -Math.PI / 2]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_65.geometry}
              material={materials["Plastic.Black"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_66.geometry}
              material={materials["Computer.Rear"]}
            />
          </group>
          <group position={[0.01, 0.675, 0.55]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_68.geometry}
              material={materials["Painted.Gray"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_69.geometry}
              material={materials["Metal.Aluminum"]}
            />
            <group position={[-0.65, 0.001, 0.361]}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_71.geometry}
                material={materials["Plastic.White"]}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_72.geometry}
                material={materials["Piano.ArturiaKeylab88"]}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_73.geometry}
                material={materials["Metal.Aluminum"]}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_74.geometry}
                material={materials["Plastic.Black"]}
              />
            </group>
          </group>
          <group position={[0, 0.839, 0]}>
            <group position={[0, 0.549, -0.011]} rotation={[-Math.PI, 0, 0]}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_85.geometry}
                material={materials["Light.White"]}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_86.geometry}
                material={materials["Plastic.White"]}
              />
            </group>
            <group position={[0, 0.46, 0.09]} rotation={[0.087, 0, 0]}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_88.geometry}
                material={materials["Screen.Display.Main"]}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_89.geometry}
                material={materials["Plastic.Black"]}
              />
            </group>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_78.geometry}
              material={materials["Plastic.Black"]}
              position={[-0.32, 0, 0]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_80.geometry}
              material={materials["Plastic.Black"]}
              position={[0.32, 0, 0]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_82.geometry}
              material={materials["Plastic.Black"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_83.geometry}
              material={materials["Metal.Brushed"]}
            />
          </group>
          <group position={[-0.9, 0.839, 0.41]} rotation={[0, 0.873, 0]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_94.geometry}
              material={materials["Plastic.Black"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_96.geometry}
              material={materials["Gamepad.DS4"]}
              position={[0, 0.027, -0.04]}
              rotation={[1.134, 0, 0]}
            />
          </group>
          <group position={[0.66, 0.839, 0.45]} rotation={[0, -Math.PI / 9, 0]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_98.geometry}
              material={materials["Gear.AkaiMidimix"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_99.geometry}
              material={materials["Gear.AkaiMidimix.LedOrange"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_100.geometry}
              material={materials["Gear.AkaiMidimix.LedPink"]}
            />
          </group>
          <group position={[-0.59, 0.838, 0.04]}>
            <group rotation={[0, 0.456, 0]}>
              <group position={[0, 0.125, 0]} rotation={[0.873, 0, 0]}>
                <group position={[0, 0.45, 0]} rotation={[0.289, 0, 0]}>
                  <group position={[0, 0.4, 0]} rotation={[2.328, 0, 0]}>
                    <group
                      position={[0.001, 0, 0]}
                      rotation={[-Math.PI / 2, -0.008, -Math.PI / 2]}
                    >
                      <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Object_114.geometry}
                        material={materials["Plastic.Black"]}
                      />
                      <group
                        position={[0, 0, 0.185]}
                        rotation={[-Math.PI, 0, 0]}
                      >
                        <group rotation={[Math.PI / 2, -Math.PI / 2, 0]}>
                          <mesh
                            castShadow
                            receiveShadow
                            geometry={nodes.Object_117.geometry}
                            material={materials["Plastic.Black"]}
                          />
                          <mesh
                            castShadow
                            receiveShadow
                            geometry={nodes.Object_118.geometry}
                            material={materials["Foam.Gray"]}
                          />
                        </group>
                      </group>
                    </group>
                  </group>
                  <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_120.geometry}
                    material={materials["Plastic.Black"]}
                    rotation={[0.025, 0, -Math.PI / 2]}
                  />
                </group>
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_122.geometry}
                  material={materials["Plastic.Black"]}
                  rotation={[0, 0, -Math.PI / 2]}
                />
              </group>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_124.geometry}
                material={materials["Plastic.Black"]}
                position={[0, 0.001, 0]}
              />
            </group>
          </group>
          <group position={[0.82, 0.839, 0.17]} rotation={[0, -Math.PI / 6, 0]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_126.geometry}
              material={materials["Plastic.Black"]}
            />
            <group position={[-5, 0.02, 0.05]}>
              <group position={[5, 0, 0]}>
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_129.geometry}
                  material={materials["Plastic.Black"]}
                />
                <group position={[0, 0.02, -0.04]} rotation={[-0.262, 0, 0]}>
                  <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_131.geometry}
                    material={materials["Plastic.Black"]}
                  />
                  <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_133.geometry}
                    material={materials["Plastic.Black"]}
                    position={[0, 0.05, 0.04]}
                    rotation={[Math.PI / 2, 0, 0]}
                  />
                </group>
              </group>
            </group>
            <group position={[0, 0.23, 0]} rotation={[0.087, 0, 0]}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_135.geometry}
                material={materials["Foam.Yellow"]}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_136.geometry}
                material={materials["Plastic.Black"]}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_137.geometry}
                material={materials["Speaker.KRK"]}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_138.geometry}
                material={materials["Speaker.KRK.Lit"]}
              />
            </group>
          </group>
          <group position={[-0.8, 0.839, 0.17]} rotation={[0, Math.PI / 6, 0]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_140.geometry}
              material={materials["Plastic.Black"]}
            />
            <group position={[-5, 0.02, 0.05]}>
              <group position={[5, 0, 0]}>
                <mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_143.geometry}
                  material={materials["Plastic.Black"]}
                />
                <group position={[0, 0.02, -0.04]} rotation={[-0.262, 0, 0]}>
                  <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_145.geometry}
                    material={materials["Plastic.Black"]}
                  />
                  <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_147.geometry}
                    material={materials["Plastic.Black"]}
                    position={[0, 0.05, 0.04]}
                    rotation={[Math.PI / 2, 0, 0]}
                  />
                </group>
              </group>
            </group>
            <group position={[0, 0.23, 0]} rotation={[0.087, 0, 0]}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_149.geometry}
                material={materials["Foam.Yellow"]}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_150.geometry}
                material={materials["Plastic.Black"]}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_151.geometry}
                material={materials["Speaker.KRK"]}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_152.geometry}
                material={materials["Speaker.KRK.Lit"]}
              />
            </group>
          </group>
          <group position={[0, 0.838, 0.48]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_154.geometry}
              material={materials["Foam.Black"]}
            />
            <group position={[-0.17, 0.004, -0.01]} rotation={[0, 0.175, 0]}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_156.geometry}
                material={materials["Plastic.Black"]}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_157.geometry}
                material={materials["KeyboardMouse.Light"]}
              />
            </group>
            <group position={[0.31, 0.005, 0.02]}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_159.geometry}
                material={materials["Plastic.Black"]}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_160.geometry}
                material={materials["KeyboardMouse.Light"]}
              />
            </group>
          </group>
          <group position={[-1.177, 0.663, 0.58]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_162.geometry}
              material={materials["Plastic.Black"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_163.geometry}
              material={materials["Metal.Brushed"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_164.geometry}
              material={materials.Rack}
            />
          </group>
          <group position={[0.712, 0.755, 0.58]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_166.geometry}
              material={materials["Plastic.Black"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_167.geometry}
              material={materials["Metal.Brushed"]}
            />
          </group>
          <group position={[-1.177, 0.755, 0.58]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_169.geometry}
              material={materials["Plastic.Black"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_170.geometry}
              material={materials["Metal.Brushed"]}
            />
          </group>
          <group position={[-1.177, 0.709, 0.58]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_172.geometry}
              material={materials["Plastic.Black"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_173.geometry}
              material={materials["Metal.Brushed"]}
            />
          </group>
          <group position={[0.712, 0.663, 0.58]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_175.geometry}
              material={materials["Plastic.Black"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_176.geometry}
              material={materials.Rack}
            />
          </group>
          <group position={[0.712, 0.617, 0.58]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_178.geometry}
              material={materials["Plastic.Black"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_179.geometry}
              material={materials["Metal.Brushed"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_180.geometry}
              material={materials.Rack}
            />
          </group>
          <group position={[-1.177, 0.617, 0.58]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_182.geometry}
              material={materials["Plastic.Black"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_183.geometry}
              material={materials.Rack}
            />
          </group>
          <group position={[0.712, 0.709, 0.58]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_185.geometry}
              material={materials["Plastic.Black"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_186.geometry}
              material={materials.Rack}
            />
          </group>
          <group position={[-1.05, 0.839, 0]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_188.geometry}
              material={materials["Plastic.Black"]}
            />
            <group position={[0, 0, 0.05]}>
              <group position={[0, 0.08, 0]} scale={0.769}>
                <group
                  position={[0, 0.26, 0]}
                  rotation={[Math.PI / 2, 0, 0.402]}
                  scale={1.3}
                >
                  <group position={[0, 0.18, -0.09]} rotation={[0, 0, -0.478]}>
                    <group position={[0, 0.22, 0]} rotation={[0, 0, -0.796]}>
                      <group
                        position={[0, 0.02, 0]}
                        rotation={[-Math.PI / 2, 0, 0]}
                      >
                        <mesh
                          castShadow
                          receiveShadow
                          geometry={nodes.Object_196.geometry}
                          material={materials["Plastic.Black"]}
                        />
                        <group
                          position={[0, 0, 0.05]}
                          rotation={[-Math.PI / 2, 0, Math.PI]}
                        >
                          <group
                            position={[0, 0.001, 0]}
                            rotation={[-1.571, 0, Math.PI]}
                          >
                            <mesh
                              castShadow
                              receiveShadow
                              geometry={nodes.Object_199.geometry}
                              material={
                                materials["Screen.Display.SideHorizontal"]
                              }
                            />
                            <mesh
                              castShadow
                              receiveShadow
                              geometry={nodes.Object_200.geometry}
                              material={materials["Plastic.Black"]}
                            />
                          </group>
                        </group>
                      </group>
                    </group>
                    <mesh
                      castShadow
                      receiveShadow
                      geometry={nodes.Object_202.geometry}
                      material={materials["Plastic.Black"]}
                      rotation={[-Math.PI / 2, 0, 0]}
                    />
                  </group>
                  <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_204.geometry}
                    material={materials["Plastic.Black_0"]}
                    rotation={[-Math.PI / 2, 0, 0]}
                  />
                </group>
              </group>
            </group>
          </group>
          <group position={[1.05, 0.839, 0]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_206.geometry}
              material={materials["Plastic.Black"]}
            />
            <group position={[0, 0, 0.05]}>
              <group position={[0, 0.08, 0]} scale={1.023}>
                <group
                  position={[0, 0.26, 0]}
                  rotation={[Math.PI / 2, 0, -1.052]}
                  scale={0.977}
                >
                  <group position={[0, 0.18, -0.09]} rotation={[0, 0, 1.797]}>
                    <group
                      position={[0, 0.22, 0]}
                      rotation={[0.087, -0.01, -0.22]}
                    >
                      <group
                        position={[0, 0.02, 0]}
                        rotation={[-Math.PI / 2, 0, 0]}
                      >
                        <mesh
                          castShadow
                          receiveShadow
                          geometry={nodes.Object_214.geometry}
                          material={materials["Plastic.Black"]}
                        />
                        <group
                          position={[0, 0, 0.05]}
                          rotation={[-Math.PI / 2, 0, Math.PI]}
                        >
                          <group
                            position={[0, 0.001, 0]}
                            rotation={[-Math.PI / 2, 0, Math.PI / 2]}
                          >
                            <mesh
                              castShadow
                              receiveShadow
                              geometry={nodes.Object_217.geometry}
                              material={
                                materials["Screen.Display.RightVertical"]
                              }
                            />
                            <mesh
                              castShadow
                              receiveShadow
                              geometry={nodes.Object_218.geometry}
                              material={materials["Plastic.Black"]}
                            />
                          </group>
                        </group>
                      </group>
                    </group>
                    <mesh
                      castShadow
                      receiveShadow
                      geometry={nodes.Object_220.geometry}
                      material={materials["Plastic.Black"]}
                      rotation={[-Math.PI / 2, 0, 0]}
                    />
                  </group>
                  <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_222.geometry}
                    material={materials["Plastic.Black_0"]}
                    rotation={[-Math.PI / 2, 0, 0]}
                  />
                </group>
              </group>
            </group>
          </group>
          <group position={[0, 0.839, 0.255]} scale={[0.12, 1, 0.085]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_224.geometry}
              material={materials["Streamdeck.Display"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_225.geometry}
              material={materials["Plastic.Black"]}
            />
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_226.geometry}
              material={materials.Glass}
            />
          </group>
          <group position={[-0.3, 0.839, 0.21]} rotation={[0, 0.436, 0]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_228.geometry}
              material={materials["Metal.Brushed"]}
            />
            <group position={[0, 0.032, 0.042]} rotation={[-Math.PI / 6, 0, 0]}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_230.geometry}
                material={materials["Plastic.Black"]}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_231.geometry}
                material={materials["Plastic.Black.Glossy"]}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_232.geometry}
                material={materials["Screen.Display.TouchScreen"]}
              />
            </group>
          </group>
          <group position={[0.3, 0.839, 0.21]} rotation={[0, -0.436, 0]}>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Object_234.geometry}
              material={materials["Metal.Brushed"]}
            />
            <group position={[0, 0.032, 0.042]} rotation={[-Math.PI / 6, 0, 0]}>
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_236.geometry}
                material={materials["Plastic.Black.Glossy"]}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_237.geometry}
                material={materials["Plastic.Black.Smooth"]}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_238.geometry}
                material={materials["Plastic.White"]}
              />
              <mesh
                castShadow
                receiveShadow
                geometry={nodes.Object_239.geometry}
                material={materials["Screen.Display.GraphicTablet"]}
              />
            </group>
          </group>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_34.geometry}
            material={materials["Box.Cassette1"]}
            position={[-0.94, 0.111, 0.21]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_36.geometry}
            material={materials["Box.Cassette2"]}
            position={[-0.94, 0.11, 0.49]}
            rotation={[0, -Math.PI / 2, 0]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_38.geometry}
            material={materials["Box.Cassette2"]}
            position={[-0.94, 0.261, 0.49]}
            rotation={[0, Math.PI / 2, 0]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_40.geometry}
            material={materials["Box.Cassette2"]}
            position={[1.08, 0.368, 0.42]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_91.geometry}
            material={materials["Plastic.White"]}
            position={[0.846, 0.409, 0.477]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_102.geometry}
            material={materials["Gear.ESIMoco"]}
            position={[0.6, 0.839, 0.14]}
            rotation={[0, -0.436, 0]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_104.geometry}
            material={materials["Plastic.Black"]}
            position={[0.91, 0.368, 0.497]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Object_106.geometry}
            material={materials["Plastic.Black"]}
            position={[0.78, 0.368, 0.497]}
          />
        </group>
      </group>
    </a.group>
  );
};

useGLTF.preload("/la_jarre_a_son_-_home_studio_desk_2023.glb");

export default Desk;
